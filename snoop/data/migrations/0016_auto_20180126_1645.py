# Generated by Django 2.0 on 2018-01-26 14:45

from pathlib import Path
from django.db import migrations, models
from django.conf import settings


def get_size_for_blobs(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    BLOB_ROOT = Path(settings.SNOOP_BLOB_STORAGE)
    Blob = apps.get_model('data', 'Blob')
    for blob in Blob.objects.using(db_alias).all():
        sha3_256 = blob.sha3_256
        path = BLOB_ROOT / sha3_256[:2] / sha3_256[2:4] / sha3_256[4:]
        blob.size = path.stat().st_size
        blob.save()


def noop(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0015_auto_20180125_1605'),
    ]

    operations = [
        migrations.AddField(
            model_name='blob',
            name='size',
            field=models.BigIntegerField(default=-1),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='file',
            name='size',
            field=models.BigIntegerField(),
        ),
        migrations.RunPython(get_size_for_blobs, noop),
    ]
