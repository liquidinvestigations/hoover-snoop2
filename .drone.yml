kind: pipeline
name: static-tests

steps:
- name: flake8
  image: alpine/flake8:3.9.1
  commands:
  - flake8
- name: pylint
  image: cytopia/pylint:latest-0.5
  commands:
  - pylint snoop

---
kind: pipeline
name: publish

depends_on:
- static-tests


concurrency:
  limit: 1

steps:
- name: build base docker image
  image: plugins/docker
  settings:
    repo: liquidinvestigations/hoover-snoop2
    auto_tag: true
    auto_tag_suffix: base
    dockerfile: Dockerfile.base
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  when:
    event:
    - push
    - tag
    branch:
    - master

- name: docker push branch
  image: plugins/docker
  settings:
    repo: liquidinvestigations/hoover-snoop2
    tags: ${DRONE_COMMIT_BRANCH}
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  when:
    event:
    - push

- name: docker push autotag + latest
  image: plugins/docker
  settings:
    repo: liquidinvestigations/hoover-snoop2
    auto_tag: true
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password

---
kind: pipeline
name: test

depends_on:
- publish
concurrency:
  limit: 1

services:
- name: snoop-rabbitmq
  image: rabbitmq:3.7.3
  volumes:
  - name: rabbit-v
    path: /var/lib/rabbitmq

- name: snoop-tika
  image: logicalspark/docker-tikaserver

- name: snoop-thumbnail
  image: fpurchess/preview-service
  user: root #undocumented setting "user" see: https://discourse.drone.io/t/permission-denied/6732/4
  environment: 
    WEB_CONCURRENCY: 6
  volumes: 
  - name: thumbnails-files
    path: /tmp/files/
  - name: thumbnails-cache
    path: /tmp/cache/

- name: snoop-pdf-preview
  image: thecodingmachine/gotenberg:6
- name: snoop-image-classification
  image: liquidinvestigations/image-classification-service:0.0.2
  environment: 
    OBJECT_DETECTION_ENABLED: true
    OBJECT_DETECTION_MODEL: "yolo"
    IMAGE_CLASSIFICATION_ENABLED: true
    IMAGE_CLASSIFICATION_MODEL: "mobilenet"
    WAITRESS_THREADS: 50
- name: search-es
  image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
  environment:
    discovery.type: single-node
    cluster.routing.allocation.disk.watermark.low: "97%"
    cluster.routing.allocation.disk.watermark.high: "98%"
    cluster.routing.allocation.disk.watermark.flood_stage: "99%"
    cluster.info.update.interval: "10m"
  volumes:
  - name: es-v
    path: /var/lib/elasticsearch/data

- name: snoop-pg
  image: postgres:12.2
  environment:
    POSTGRES_USER: snoop
    POSTGRES_DATABASE: snoop
    POSTGRES_PASSWORD: snoop
  volumes:
  - name: pg-v
    path: /var/lib/postgresql/data

steps:
- name: download testdata
  image: alpine/git:1.0.7
  volumes:
  - name: test-collections-v
    path: /testdata
  commands:
  - cd /testdata
  - git clone https://github.com/hoover/testdata .

- name: run tests
  image: liquidinvestigations/hoover-snoop2:${DRONE_COMMIT_BRANCH}
  pull: always
  volumes:
  - name: test-collections-v
    path: /opt/hoover/collections/testdata
  environment:
    WAIT_HOSTS: search-es:9200, snoop-pg:5432, snoop-tika:9998, snoop-thumbnail:9990, snoop-pdf-preview:3000, snoop-image-classification:5001
    WAIT_HOSTS_TIMEOUT: 60
    SNOOP_DB: "postgresql://snoop:snoop@snoop-pg:5432/snoop"
    SNOOP_COLLECTIONS: '[{"name": "testdata", "process": true}]'
    SNOOP_AMQP_URL: "amqp://snoop-rabbitmq"
    SNOOP_TIKA_URL: "http://snoop-tika:9998"
    SNOOP_THUMBNAIL_URL: "http://snoop-thumbnail:8000/"
    SNOOP_PDF_PREVIEW_URL: "http://snoop-pdf-preview:3000/"
    SNOOP_IMAGE_CLASSIFICATION_URL: "http://snoop-image-classification:5001/classify-image"
    SNOOP_OBJECT_DETECTION_URL: "http://snoop-image-classification:5001/detect-objects"
    SNOOP_ES_URL: "http://search-es:9200"
    SNOOP_COLLECTION_ROOT: "/opt/hoover/collections"
    SNOOP_BLOB_STORAGE: "/opt/hoover/snoop/blobs"
    USER_MODE: "TEST"
  commands:
  - whoami
  - cd /opt/hoover/snoop
  - chown -R 666:666 /opt/hoover/collections
  - py.test -vv

trigger:
  events:
  - push
  - cron

volumes:
- name: test-collections-v
  temp: {}
- name: es-v
  temp: {}
- name: pg-v
  temp: {}
- name: thumbnails-files
  temp: {}
- name: thumbnails-cache
  temp: {}
---
kind: secret
name: docker_username
get:
  path: liquid/ci/drone.docker
  name: username

---
kind: secret
name: docker_password
get:
  path: liquid/ci/drone.docker
  name: password
