kind: pipeline
name: test

steps:
- name: flake8
  image: alpine/flake8:3.7.7
  commands:
  - flake8

- name: build base docker image
  image: plugins/docker
  settings:
    repo: liquidinvestigations/hoover-snoop2
    # https://0-8-0.docs.drone.io/substitution/
    auto_tag: true
    auto_tag_suffix: base
    dockerfile: Dockerfile.base
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  when:
    event:
    - push
    - tag
    branch:
    - master

- name: download testdata
  image: alpine/git:1.0.7
  volumes:
  - name: test-collections-v
    path: /drone/src/testsuite/volumes/collections
  commands:
  - mkdir -p testsuite/volumes/collections
  - git clone https://github.com/hoover/testdata testsuite/volumes/collections/testdata
  - chown 666:666 testsuite/volumes/collections/testdata

- name: build docker image
  image: docker
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  commands:
  - docker build . -f Dockerfile --tag liquidinvestigations/hoover-snoop2:test

- name: run tests
  image: liquidinvestigations/hoover-snoop2:test
  pull: if-not-exists
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  - name: gnupg-v
    path: /opt/hoover/gnupg
  - name: test-collections-v
    path: /opt/hoover/collections
  - name: snoop-blobs-v
    path: /opt/hoover/snoop/blobs
  # - name: search-v-testing
  #   path: /opt/hoover/search/hoover/site/settings/testing_local.py
  environment:
    WAIT_HOSTS: search-es:9200, snoop-pg:5432
    WAIT_HOSTS_TIMEOUT: 60
    SNOOP_DB: "postgresql://snoop:snoop@snoop-pg:5432/snoop"
    SNOOP_COLLECTIONS: '[{"name": "testdata", "process": true}]'
    SNOOP_AMQP_URL: "amqp://snoop-rabbitmq"
    SNOOP_TIKA_URL: "http://snoop-tika:9998"
    SNOOP_ES_URL: "http://search-es:9200"
    SNOOP_COLLECTION_ROOT: "/opt/hoover/collections"
    SNOOP_BLOB_STORAGE: "/opt/hoover/snoop/blobs"
  commands:
  - cd /opt/hoover/snoop
  - py.test -vv

services:
- name: docker daemon in docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run/docker.sock

- name: snoop-rabbitmq
  image: rabbitmq:3.7.3

- name: snoop-tika
  image: logicalspark/docker-tikaserver

- name: search-es
  image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
  volumes:
  - name: search-es-v
    path: /usr/share/elasticsearch/data
  environment:
    discovery.type: single-node

- name: snoop-pg
  image: postgres:12.2
  environment:
    POSTGRES_USER: snoop
    POSTGRES_DATABASE: snoop
    POSTGRES_PASSWORD: snoop
  volumes:
  - name: snoop-pg-v
    path: /var/lib/postgresql/data


volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock
- name: snoop-pg-v
  host:
    path: /drone/src/volumes/snoop-pg/data
- name: search-es-v
  host:
    path: /drone/src/volumes/search-es/data
# - name: test-collections-v
#   host:
#     path: /drone/src/testsuite/volumes/collections
- name: gnupg-v
  host:
    path: /drone/src/volumes/gnupg
- name: snoop-blobs-v
  host:
    path: /drone/src/volumes/snoop-blobs
- name: test-collections-v
  temp: {}
    # path: /opt/hoover/snoop/testsuite/volumes/collections

#---
# kind: pipeline
# name: publish to docker hub
#
# trigger:
#   status:
#   - success
#   event:
#   - push
#   - tag
#
# depends_on:
# - test
#
# steps:
# - name: docker push branch ${DRONE_COMMIT_BRANCH}
#   image: plugins/docker
#   settings:
#     repo: liquidinvestigations/hoover-snoop2
#     # https://0-8-0.docs.drone.io/substitution/
#     tags: ${DRONE_COMMIT_BRANCH}
#     username:
#       from_secret: docker_username
#     password:
#       from_secret: docker_password
#   when:
#     event:
#     - push
#     branch:
#       exclude:
#       - dependabot/**
#
# - name: docker push autotag + latest
#   image: plugins/docker
#   settings:
#     repo: liquidinvestigations/hoover-snoop2
#     auto_tag: true
#     username:
#       from_secret: docker_username
#     password:
#       from_secret: docker_password
#
---
kind: secret
name: docker_username
get:
  path: liquid/ci/drone.docker
  name: username

---
kind: secret
name: docker_password
get:
  path: liquid/ci/drone.docker
  name: password
